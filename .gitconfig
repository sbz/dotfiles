[user]
        email = sbz@6dev.net
[credential]
        helper = cache
[alias]
        branches = branch -l
        remotes = remote -v
        ru = remote update
        rename = !f() { git push origin origin/$1:refs/heads/$2 :$1; } ; f
        rn = rename
        st = status
        ci = commit
        lg = log --graph --pretty=tformat:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%an %ar)%Creset'
        last = cat-file commit HEAD
        fu = fetch upstream
        mu = !(git fetch upstream && git merge --no-ff upstream/master)
        md = !(git fetch upstream && git merge --no-ff upstream/develop)
        whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short
        tree = forest --pretty=format:'%C(red)%h %C(magenta)(%ar) %C(blue)%an %C(reset)%s' --style=15 --reverse
        restore-file = !git checkout $(git rev-list -n 1 HEAD -- "$1")^ -- "$1"
        re =  repack -a -d -f --window=100
        up = !(git fetch upstream && git rebase upstream/develop)
        hide = update-index --assume-unchanged
        unhide = update-index --no-assume-unchanged
        recbr = for-each-ref --sort=-committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
[core]
        excludesfile = ~sbz/.gitignore_global
        editor = /usr/local/bin/vim
[diff]
        mnemonicPrefix = true
        wordRegex = .
[log]
        abbrevCommit = true
[merge]
        conflictStyle = diff3
[mergetool]
        keepBackup = false
        keepTemporaries = false
        prompt = false
[rerere]
        enabled = true
[status]
        submoduleSummary = true
[push]
        default = simple
[pull]
        rebase = true
[gitreview]
        username = sbrabez
[filter "lfs"]
        clean = git-lfs clean %f
        smudge = git-lfs smudge %f
        required = true
